<!-- This is just an additional tools after we use a IDE env. -->
<project name="org.siphon.d2js" basedir="." default="default">
	<property file="build.properties" />

	<path id="classpath">
		<fileset dir="${CATALINA_HOME}/lib">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${dir.weblib}">
			<include name="**.jar" />
			<exclude name="${ant.project.name}.jar" />
		</fileset>
	</path>

	<target name="compile">
		<delete dir="${dir.bin}" />
		<mkdir dir="${dir.bin}" />
		<javac srcdir="${dir.src}" debug="on" destdir="${dir.bin}" classpathref="classpath" includeantruntime="true" includejavaruntime="true" encoding="utf-8" />
		<jar destfile="${dir.weblib}/${ant.project.name}.jar">
			<fileset dir="${dir.bin}" includes="**">
				<exclude name="log4j.properties" />
			</fileset>
			<metainf dir="${dir.web}/META-INF" />
		</jar>
	</target>

	<target name="default">
		<antcall target="compile" />
		<delete file="${project.war}" />
		<mkdir dir="${dir.temp}" />
		<copy todir="${dir.temp}" includeemptydirs="false">
			<fileset dir="${dir.web}">
				<exclude name="**/*-test/" />
				<exclude name="**/guide/" />
				<exclude name="**/bookstore/" />
				<exclude name="**/test/" />
				<exclude name="**/*.html" />
				<exclude name="**/molecule-dev/" />
				<exclude name="**/molecules/*block*.html" />
			</fileset>
		</copy>

		<war destfile="${project.war}">
			<fileset dir="${dir.temp}">
				<exclude name="**/*.class" />
			</fileset>
		</war>

		<delete dir="${dir.temp}" />
	</target>

	<patternset id="not-web-content">
		<exclude name="**/WEB-INF/web.xml" />
		<exclude name="**/WEB-INF/config/**" />
		<exclude name="**/META-INF/**" />
		<exclude name="**/*-test/" />
		<exclude name="**/guide/" />
		<exclude name="**/bookstore/" />
		<exclude name="**/test/" />
		<exclude name="**/*.html" />
		<exclude name="**/*.jssp" />
		<exclude name="**/molecule-dev/" />
		<exclude name="**/molecules/*block*.html" />
	</patternset>

	<target name="update-d2js">
		<property name="file.d2js.zip" value="${dir.temp}/org.siphon.d2js.zip" />
		<mkdir dir="${dir.temp}" />
		<get src="https://github.com/inshua/d2js/archive/master.zip" dest="${file.d2js.zip}" />
		<unzip dest="${dir.temp}" src="${file.d2js.zip}">
			<patternset refid="not-web-content" />
		</unzip>
		<delete file="${file.d2js.zip}" />
		<copydir src="${dir.temp}/d2js-master/WebContent" dest="${dir.web}" />

		<delete dir="${dir.temp}" />
	</target>

	<target name="create-d2js-project">
		<input addproperty="gen.project.name" message="enter project name" />
		<echo message="Project Name: ${gen.project.name}" />

		<input addproperty="gen.project.parentdir" message="put to:" description="workspace directory" defaultvalue="${basedir}/.." />
		<echo message="Put To: ${gen.project.parentdir}" />

		<input addproperty="gen.database.url" message="database url(pg):" defaultvalue="jdbc:postgresql://localhost:5432/bookstore" description="you can manually edit WebContent/WEB-INF/config/database.js" />
		<input addproperty="gen.database.username" message="database username:" defaultvalue="postgres" description="you can manually edit WebContent/WEB-INF/config/database.js" />
		<input addproperty="gen.database.password" message="database password:" defaultvalue="password" description="you can manually edit WebContent/WEB-INF/config/database.js" />

		<!--<antcall target="compile" />-->

		<delete dir="${dir.temp}" />

		<mkdir dir="${dir.temp}" />
		<mkdir dir="${dir.temp}/src" />
		<mkdir dir="${dir.temp}/build" />
		<mkdir dir="${dir.temp}/test" />
		<mkdir dir="${dir.temp}/WebContent" />

		<copy todir="${dir.temp}/WebContent">
			<fileset dir="${dir.web}">
				<patternset refid="not-web-content" />
			</fileset>
			<fileset dir="${dir.web}">
				<!-- ignored by prior pattern -->
				<patternset>
					<include name="**/WEB-INF/web.xml" />
					<include name="**/WEB-INF/config/**" />
					<include name="**/welcome.jssp" />
				</patternset>
			</fileset>
		</copy>

		<copy todir="${dir.temp}" overwrite="true">
			<fileset dir="${basedir}">
				<include name=".classpath" />
				<include name=".project" />
				<include name="build.properties" />
				<include name="build.xml" />
				<include name="**/.settings/*" />
			</fileset>
		</copy>
		<copy todir="${dir.temp}/src" overwrite="true" file="${basedir}/src/log4j.properties" />
		<copy tofile="${dir.temp}/WebContent/index.jssp" overwrite="true" file="${dir.web}/welcome.jssp" />

		<replace file="${dir.temp}/.project" token="&lt;name&gt;d2js&lt;/name&gt;" value="&lt;name&gt;${gen.project.name}&lt;/name&gt;" />
		<replace file="${dir.temp}/build.xml" token="name=&quot;org.siphon.d2js&quot;" value="name=&quot;${gen.project.name}&quot;" />
		<replace file="${dir.temp}/src/log4j.properties" token="d2js" value="${gen.project.name}" />
		<replace file="${dir.temp}/WebContent/WEB-INF/config/website.js" token="d2js" value="${gen.project.name}" />
		<replace file="${dir.temp}/WebContent/WEB-INF/web.xml" token="&lt;display-name&gt;d2js&lt;/display-name&gt;" value="&lt;display-name&gt;${gen.project.name}&lt;/display-name&gt;" />
		<replace file="${dir.temp}/WebContent/WEB-INF/config/database.js" token="jdbc:postgresql://localhost:5432/bookstore" value="/${gen.database.url}/" />
		<replace file="${dir.temp}/WebContent/WEB-INF/config/database.js" token="&quot;postgres&quot;" value="&quot;${gen.database.username}&quot;" />
		<replace file="${dir.temp}/WebContent/WEB-INF/config/database.js" token="&quot;pass4postgres&quot;" value="&quot;${gen.database.password}&quot;" />
		<replace file="${dir.temp}/.settings/org.eclipse.wst.common.component" token="d2js" value="${gen.project.name}" />
		<replace file="${dir.temp}/WebContent/jslib/molecule.js" token="d2js" value="${gen.project.name}" />

		<property name="gen.project.dir" value="${gen.project.parentdir}/${gen.project.name}" />

		<mkdir dir="${gen.project.dir}" />
		<copy todir="${gen.project.dir}">
			<fileset dir="${dir.temp}" includes="**/*">
			</fileset>
		</copy>

		<delete dir="${dir.temp}" />
	</target>


	<target name="update-molecule">
		<copy file="${basedir}/molecule/molecule.js" tofile="${dir.web}/jslib/molecule.js" />
	</target>
</project>