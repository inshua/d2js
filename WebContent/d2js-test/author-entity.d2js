d2js.entity_map = {
	name : 'Author', 
	// table: 'author',
	map: {
		books : {d2js: 'book-entity.d2js', by: 'author'},	// book.d2js 提供 fetchBy 函数，接收 {author_id: xxx}, 返回一个数组，也可接收 {id:xx} 返回一行，行根据 entity map 设置有type信息。
		// fav : {d2js: 'fav.d2js',  by: 'person_id'},
	}
}

/**
 * 实现ORM映射，可对外键、子表数据关联提取。
 */
D2JS.DataTable.prototype.orm = function(d2js){
	var et = d2js.entity_map;
	if(et == null) return this;
	
	var r = {};
	for(var k in this){
		r[k] = this[k];
	}
	var rows = r.rows;
	for(var i=0; i<rows.length; i++){
		var row = rows[i];
		row._d2js_entity_type = et.name;
		for(var attr in et.map){
			if(et.map.hasOwnProperty(attr)){
				var m = et.map[attr];
				var another = d2js.findD2js(m.d2js);
				if(another['fetchBy'] == null) throw new Error('fetchBy not existed in ' + m.d2js);
				var fromKey = m.attr;
				if(fromKey == null){
					if(m.one){
						fromKey = attr;
					} else {
						fromKey = et.pk || 'id';
					}
				}
				logger.info('from key ' + fromKey + ', m: ' + JSON.stringify(m));
				var search = {};
				search[m.by] = row[fromKey];
				var result = another['fetchBy'](search);
				logger.info('search by ' + JSON.stringify(search));
				result = result.orm(another);
				if(m.one){
					row[attr] = result.rows.length ? result.rows[0] : null;
				} else {
					row[attr] = result.rows;
				}
			}
		}
	}
	return r;
}
		
		
d2js.fetch = function(params){
	sql{.
		select * from author where 1 = 1
		code{.
			if(params.name){
				sql{. and strpos(name, :name) > 0 .}
			}
		.}
	.}
	
	var r = this.query(this.orderBy(sql, params._sorts, {id:'asc'}), params, params._page);
	return r.orm(this);
}

d2js.fetchBy = function(by){
	// assert(by.id || by.author)
	sql{.
		select * from author
		sql{.?(by.id) and id = :id .}
	.}
	return this.query(sql);
}

d2js.modify = function(row, columns){
	$V(this, row, {
		name : V.notNull,
		email : V.email,
		info : V.attrs(['linkin']),
		'info,linkin': V.shortest(5)
	});
	
	return this.updateRow('author', row, columns);
}

d2js.number = 1;

d2js.exports.test = d2js.test = function(params, web){
	//logger.info(web.out);
	//logger.info(web.request);
	//logger.info(web.response);
	//logger.info(d2jsRunner);
	// Java.type('java.lang.Thread').sleep(200);
	//logger.info(d2js.number);
	// logger.debug('run on ' + Java.type('java.lang.Thread').currentThread().name);
	return "hello " + (d2js.number ++);
}

